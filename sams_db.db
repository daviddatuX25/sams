-- Create Database
CREATE DATABASE IF NOT EXISTS sams_db;
USE sams_db;

-- Users Table
CREATE TABLE Users (
    user_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    birthday DATE,
    password_hash VARCHAR(255) NOT NULL,
    role ENUM('student', 'teacher', 'admin') NOT NULL,
    status ENUM('active', 'inactive') NOT NULL DEFAULT 'active'
);

-- Rooms Table
CREATE TABLE Rooms (
    room_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    room_name VARCHAR(255) NOT NULL UNIQUE
);

-- Classes Table
CREATE TABLE Classes (
    class_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    subject_id INT UNSIGNED NOT NULL,
    teacher_id INT UNSIGNED NOT NULL,
    semester ENUM('1st', '2nd', 'summer') NOT NULL DEFAULT '1st',
    FOREIGN KEY (teacher_id) REFERENCES Users(user_id) ON DELETE CASCADE
);

-- Class_sessions Table
CREATE TABLE Class_sessions (
    class_session_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    class_id INT UNSIGNED NOT NULL,
    open_datetime DATETIME NOT NULL,
    close_datetime DATETIME NOT NULL,
    FOREIGN KEY (class_id) REFERENCES Classes(class_id) ON DELETE CASCADE
);

-- Attendance Table
CREATE TABLE Attendance (
    attendance_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    user_id INT UNSIGNED NOT NULL,
    class_session_id INT UNSIGNED NOT NULL,
    time_in DATETIME NOT NULL,
    time_out DATETIME DEFAULT NULL,
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (class_session_id) REFERENCES Class_sessions(class_session_id) ON DELETE CASCADE,
    INDEX idx_attendance_user (user_id),
    INDEX idx_attendance_session (class_session_id)
);

-- Enrollments Table
CREATE TABLE Enrollments (
    enrollment_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    user_id INT UNSIGNED NOT NULL,
    class_id INT UNSIGNED NOT NULL,
    enrolled_datetime DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (user_id, class_id),
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (class_id) REFERENCES Classes(class_id) ON DELETE CASCADE,
    INDEX idx_enrollment_user (user_id),
    INDEX idx_enrollment_class (class_id)
);

-- Class_room_time_slots Table
CREATE TABLE Class_room_time_slots (
    rts_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    room_id INT UNSIGNED NOT NULL,
    time_start TIME NOT NULL,
    time_end TIME NOT NULL,
    week_day ENUM('mon', 'tue', 'wed', 'thu', 'fri', 'sat') NOT NULL,
    class_id INT UNSIGNED NOT NULL,
    FOREIGN KEY (room_id) REFERENCES Rooms(room_id) ON DELETE CASCADE,
    FOREIGN KEY (class_id) REFERENCES Classes(class_id) ON DELETE CASCADE,
    INDEX idx_room_time (room_id, week_day, time_start, time_end)
);

-- Notifications Table
CREATE TABLE Notifications (
    notif_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    user_id INT UNSIGNED NOT NULL,
    message TEXT NOT NULL,
    status ENUM('read', 'unread') NOT NULL DEFAULT 'unread',
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    INDEX idx_notif_user (user_id),
    INDEX idx_notif_status (status)
);

-- Attendance Leave Table
CREATE TABLE Attendance_leave (
    attendance_leave_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    user_id INT UNSIGNED NOT NULL,
    status ENUM('pending', 'approved', 'rejected') NOT NULL DEFAULT 'pending',
    letter TEXT NOT NULL,
    datetimestamp_created DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    datetimestamp_reviewed DATETIME DEFAULT NULL,
    datetimestamp_resolved DATETIME DEFAULT NULL,
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    INDEX idx_leave_user (user_id),
    INDEX idx_leave_status (status)
);
